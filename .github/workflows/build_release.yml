name: Build GUI and create release

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow      
      - name: Convert PNG to ICO
        run: |
          python -c "
          from PIL import Image
          import os
          
          # Load the PNG image
          img = Image.open('img/deadunlock_icon.png')
          
          # Ensure it's RGBA mode for transparency support
          if img.mode != 'RGBA':
              img = img.convert('RGBA')
          
          # Create different sizes for the ICO file
          sizes = [(16, 16), (24, 24), (32, 32), (48, 48), (64, 64), (128, 128), (256, 256)]
          icons = []
          
          for size in sizes:
              # Resize image maintaining aspect ratio
              resized = img.resize(size, Image.Resampling.LANCZOS)
              icons.append(resized)
          
          # Save as ICO with all sizes
          icons[0].save('img/deadunlock_icon.ico', format='ICO', sizes=[icon.size for icon in icons], append_images=icons[1:])
          print('Icon converted successfully with sizes:', [icon.size for icon in icons])
          
          # Verify the ICO file was created
          if os.path.exists('img/deadunlock_icon.ico'):
              size = os.path.getsize('img/deadunlock_icon.ico')
              print(f'ICO file created: {size} bytes')
          else:
              raise Exception('ICO file was not created')
          "
      
      - name: Build executable
        run: |
          echo ${{ github.sha }} > version.txt
          
          # Debug: Check if ICO file exists before building
          if (Test-Path "img/deadunlock_icon.ico") {
              $size = (Get-Item "img/deadunlock_icon.ico").Length
              Write-Output "ICO file found: $size bytes"
          } else {
              Write-Error "ICO file not found before building!"
              Get-ChildItem img/
              exit 1
          }
          
          # Build with verbose output
          pyinstaller --log-level=INFO aimbot_gui.spec
          
      - name: Verify executable and icon
        run: |
          # Check if executable was created
          if (Test-Path "dist/aimbot_gui.exe") {
              $size = (Get-Item "dist/aimbot_gui.exe").Length
              Write-Output "Executable created: $size bytes"
              
              # Try to extract icon info (basic check)
              $file = Get-Item "dist/aimbot_gui.exe"
              Write-Output "Executable details: $($file.Name) - $($file.Length) bytes"
          } else {
              Write-Error "Executable not found!"
              exit 1
          }

      - name: Get tag name
        id: vars
        run: echo "tag=build-${{ github.sha }}" >> $env:GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.tag }}
          files: |
            dist/aimbot_gui.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
